{"version":3,"sources":["transitions/slide.module.css","components/ContactListItem/ContactListItem.module.css","components/Filter/Filter.module.css","components/ErrorMessage/ErrorMessage.module.css","components/ContactList/ContactList.module.css","components/PhoneBook/PhoneBook.module.css","transitions/slideErr.module.css","redux/reducers.js","redux/types.js","redux/rootReducer.js","redux/store.js","utils/localStorage.js","redux/selectors.js","redux/actions.js","components/ErrorMessage/ErrorMessage.jsx","components/ContactForm/ContactForm.jsx","components/ContactForm/ContactFormContainer.js","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","components/ContactList/ContactListContainer.js","components/Filter/Filter.jsx","components/Filter/FilterContainer.js","components/PhoneBook/PhoneBook.jsx","components/App.jsx","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","contactsReducer","createReducer","state","action","payload","filter","contact","id","filterReducer","notifyReducer","combineReducers","contacts","notifyText","rootReducer","phoneBook","phoneBookReducer","persistedState","serializedState","localStorage","getItem","JSON","parse","err","loadStateFromLocalStorage","store","configureStore","reducer","preloadedState","subscribe","existedData","stringify","setItem","alert","saveToLocalStorage","getState","getContacts","getSearhValue","getFilteredContacts","createSelector","searchValue","name","toLowerCase","includes","getNotifyMessage","addContact","createAction","deleteContact","searchContact","showNotify","ErrorMessage","className","styles","errorMessageContainer","errorMessageText","ContactForm","number","handleChange","target","value","setState","handleSubmit","evt","preventDefault","includeContacts","props","find","createNewContact","uuidv4","showErrorMessage","setTimeout","this","TransitionGroup","CSSTransition","timeout","classNames","slideErrTransition","form","onSubmit","label","input","type","placeholder","onChange","pattern","submitBtn","Component","connect","selectors","dispatch","actions","showNotifyWithMessage","text","ContactListItem","onDeleteContact","button","onClick","ContactList","component","contactList","map","key","slideTransition","item","Filter","filterValue","onChangeFilter","searchContainer","e","container","in","appear","logo","length","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a00e24d6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__11AGb\",\"enterActive\":\"slide_enterActive__bcJZ4\",\"exit\":\"slide_exit__30Sje\",\"exitActive\":\"slide_exitActive__2HtzZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactListItem_name__2IbLh\",\"number\":\"ContactListItem_number__2bQz_\",\"button\":\"ContactListItem_button__3sg1r\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchContainer\":\"Filter_searchContainer__1tRT-\",\"label\":\"Filter_label__rD8pz\",\"input\":\"Filter_input__Lh49e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMessageContainer\":\"ErrorMessage_errorMessageContainer__2vUF0\",\"errorMessageText\":\"ErrorMessage_errorMessageText__5BCTd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1lF3N\",\"item\":\"ContactList_item__2pdR1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PhoneBook_container__g79Vb\",\"logo\":\"PhoneBook_logo__1jWDw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slideErr_enter__2lxhz\",\"enterActive\":\"slideErr_enterActive__1Ol2M\",\"exit\":\"slideErr_exit__1NZ8H\",\"exitActive\":\"slideErr_exitActive__2zFO_\"};","import { createReducer } from \"@reduxjs/toolkit\";\r\nimport { combineReducers } from \"redux\";\r\nimport * as types from \"./types\";\r\n\r\nconst contactsReducer = createReducer([], {\r\n  [types.ADD_CONTACT]: (state, action) => {\r\n    return [action.payload, ...state];\r\n  },\r\n\r\n  [types.DELETE_CONTACT]: (state, action) => {\r\n    return state.filter((contact) => contact.id !== action.payload);\r\n  },\r\n});\r\n\r\nconst filterReducer = createReducer(\"\", {\r\n  [types.SEARCH_CONTACT]: (state, action) => {\r\n    return action.payload;\r\n  },\r\n});\r\n\r\nconst notifyReducer = createReducer(\"\", {\r\n  [types.SHOW_NOTIFICATION]: (state, action) => {\r\n    return action.payload;\r\n  },\r\n});\r\n\r\nexport default combineReducers({\r\n  contacts: contactsReducer,\r\n  filter: filterReducer,\r\n  notifyText: notifyReducer,\r\n});\r\n","export const ADD_CONTACT = \"phoneBook/ADD_CONTACT\";\r\nexport const SEARCH_CONTACT = \"phoneBook/SEARCH_CONTACT\";\r\nexport const DELETE_CONTACT = \"phoneBook/DELETE_CONTACT\";\r\nexport const SHOW_NOTIFICATION = \"phoneBook/SHOW_NOTIFICATION\";\r\n","import { combineReducers } from \"redux\";\r\nimport phoneBookReducer from \"./reducers\";\r\n\r\nconst rootReducer = combineReducers({\r\n  phoneBook: phoneBookReducer,\r\n});\r\n\r\nexport default rootReducer;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport rootReducer from \"./rootReducer\";\r\nimport {\r\n  saveToLocalStorage,\r\n  loadStateFromLocalStorage,\r\n} from \"../utils/localStorage\";\r\n\r\nconst persistedState = loadStateFromLocalStorage();\r\n\r\nconst store = configureStore({\r\n  reducer: rootReducer,\r\n  preloadedState: persistedState,\r\n});\r\n\r\nstore.subscribe(() => saveToLocalStorage(store.getState()));\r\n\r\nexport default store;\r\n","export function saveToLocalStorage(state) {\r\n  try {\r\n    const existedData = JSON.stringify(state);\r\n    localStorage.setItem(\"state\", existedData);\r\n  } catch {\r\n    alert(\"Something went wrong...\");\r\n  }\r\n}\r\n\r\nexport function loadStateFromLocalStorage() {\r\n  try {\r\n    const serializedState = localStorage.getItem(\"state\");\r\n\r\n    if (serializedState === null) {\r\n      return undefined;\r\n    }\r\n\r\n    return JSON.parse(serializedState);\r\n  } catch (err) {\r\n    return undefined;\r\n  }\r\n}\r\n","import { createSelector } from \"reselect\";\r\n\r\nexport const getContacts = (store) => store.phoneBook.contacts;\r\n\r\nexport const getSearhValue = (store) => store.phoneBook.filter;\r\n\r\nexport const getFilteredContacts = createSelector(\r\n  [getContacts, getSearhValue],\r\n  (contacts, searchValue) =>\r\n    contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(searchValue.toLowerCase())\r\n    )\r\n);\r\n\r\nexport const getNotifyMessage = (store) => store.phoneBook.notifyText;\r\n","import { createAction } from \"@reduxjs/toolkit\";\r\nimport * as types from \"./types\";\r\n\r\nexport const addContact = createAction(types.ADD_CONTACT);\r\nexport const deleteContact = createAction(types.DELETE_CONTACT);\r\nexport const searchContact = createAction(types.SEARCH_CONTACT);\r\nexport const showNotify = createAction(types.SHOW_NOTIFICATION);\r\n","import React from \"react\";\r\nimport styles from \"./ErrorMessage.module.css\";\r\n\r\nconst ErrorMessage = () => {\r\n  return (\r\n    <div className={styles.errorMessageContainer}>\r\n      <p className={styles.errorMessageText}>Contact allready exist!</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ErrorMessage;\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport T from \"prop-types\";\r\nimport ErrorMessage from \"../ErrorMessage/ErrorMessage\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport slideErrTransition from \"../../transitions/slideErr.module.css\";\r\n\r\nimport styles from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  static propTypes = {\r\n    contacts: T.array.isRequired,\r\n    addContact: T.func.isRequired,\r\n  };\r\n\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n    err: false,\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    const name = evt.target.name.value;\r\n    const number = evt.target.number.value;\r\n    const contacts = this.props.contacts;\r\n\r\n    const includeContacts = contacts.find(\r\n      (contact) => contact.name === this.state.name\r\n    );\r\n\r\n    const createNewContact = {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n    };\r\n    if (name === \"\" || number === \"\") {\r\n      return;\r\n    }\r\n    if (includeContacts) {\r\n      this.showErrorMessage();\r\n    } else {\r\n      this.props.addContact(createNewContact);\r\n      this.setState({ name: \"\", number: \"\" });\r\n    }\r\n  };\r\n\r\n  showErrorMessage = () => {\r\n    this.setState({\r\n      err: true,\r\n    });\r\n    setTimeout(() => {\r\n      this.setState({ err: false });\r\n    }, 2500);\r\n  };\r\n\r\n  render() {\r\n    const { name, number, err } = this.state;\r\n\r\n    return (\r\n      <>\r\n        <TransitionGroup>\r\n          {err && (\r\n            <CSSTransition timeout={250} classNames={slideErrTransition}>\r\n              <ErrorMessage />\r\n            </CSSTransition>\r\n          )}\r\n        </TransitionGroup>\r\n        <form className={styles.form} onSubmit={this.handleSubmit}>\r\n          <label className={styles.label}>\r\n            Name\r\n            <input\r\n              className={styles.input}\r\n              type=\"text\"\r\n              placeholder=\"Enter name\"\r\n              name=\"name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n          <label className={styles.label}>\r\n            Number\r\n            <input\r\n              className={styles.input}\r\n              type=\"tel\"\r\n              placeholder=\"Enter number in format 123-45-67\"\r\n              name=\"number\"\r\n              pattern=\"[0-9]{3}-[0-9]{2}-[0-9]{2}\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n            />\r\n          </label>\r\n\r\n          <button className={styles.submitBtn} type=\"submit\">\r\n            Add contact\r\n          </button>\r\n        </form>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import { connect } from \"react-redux\";\r\nimport * as selectors from \"../../redux/selectors\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport ContactForm from \"./ContactForm\";\r\n\r\nconst mapStateToProps = (store) => ({\r\n  contacts: selectors.getContacts(store),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addContact: (contact) => dispatch(actions.addContact(contact)),\r\n  showNotifyWithMessage: (text) => dispatch(actions.showNotify(text)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\r\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\n\r\nimport styles from \"./ContactListItem.module.css\";\r\n\r\nconst ContactListItem = ({ name, number, onDeleteContact }) => {\r\n  return (\r\n    <>\r\n      <span className={styles.name}>{name}</span>\r\n      <span className={styles.number}>{number}</span>\r\n      <button className={styles.button} type=\"button\" onClick={onDeleteContact}>\r\n        X\r\n      </button>\r\n    </>\r\n  );\r\n};\r\n\r\nContactListItem.propTypes = {\r\n  name: T.string.isRequired,\r\n  number: T.string.isRequired,\r\n  onDeleteContact: T.func.isRequired,\r\n};\r\n\r\nexport default ContactListItem;\r\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\nimport ContactListItem from \"../ContactListItem/ContactListItem\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport slideTransition from \"../../transitions/slide.module.css\";\r\n\r\nimport styles from \"./ContactList.module.css\";\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => (\r\n  <TransitionGroup component=\"ul\" className={styles.contactList}>\r\n    {contacts.map((contact) => {\r\n      return (\r\n        <CSSTransition\r\n          key={contact.id}\r\n          timeout={250}\r\n          classNames={slideTransition}\r\n        >\r\n          <li className={styles.item}>\r\n            <ContactListItem\r\n              {...contact}\r\n              onDeleteContact={() => onDeleteContact(contact.id)}\r\n            />\r\n          </li>\r\n        </CSSTransition>\r\n      );\r\n    })}\r\n  </TransitionGroup>\r\n);\r\nContactList.propTypes = {\r\n  contacts: T.array.isRequired,\r\n  onDeleteContact: T.func.isRequired,\r\n};\r\n\r\nexport default ContactList;\r\n","import { connect } from \"react-redux\";\r\nimport * as selectors from \"../../redux/selectors\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport ContactList from \"./ContactList\";\r\n\r\nconst mapStateToProps = (store) => ({\r\n  contacts: selectors.getFilteredContacts(store),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onDeleteContact: (id) => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\r\n","import React from \"react\";\r\nimport T from \"prop-types\";\r\n\r\nimport styles from \"./Filter.module.css\";\r\n\r\nconst Filter = ({ filterValue, onChangeFilter }) => {\r\n  return (\r\n    <div className={styles.searchContainer}>\r\n      <label className={styles.label}>\r\n        Find contact by name\r\n        <input\r\n          type=\"text\"\r\n          name=\"filter\"\r\n          value={filterValue}\r\n          className={styles.input}\r\n          onChange={(e) => onChangeFilter(e.target.value)}\r\n          placeholder=\"Search Contact\"\r\n        />\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nFilter.propTypes = {\r\n  value: T.string.isRequired,\r\n  onChangeFilter: T.func.isRequired,\r\n};\r\n\r\nexport default Filter;\r\n","import { connect } from \"react-redux\";\r\nimport * as actions from \"../../redux/actions\";\r\nimport * as selectors from \"../../redux/selectors\";\r\nimport Filter from \"./Filter\";\r\n\r\nconst mapStateToProps = (store) => ({\r\n  filterValue: selectors.getSearhValue(store),\r\n});\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  onChangeFilter: (value) => dispatch(actions.searchContact(value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\r\n","import React from \"react\";\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\nimport { connect } from \"react-redux\";\nimport ContactForm from \"../ContactForm/ContactFormContainer\";\nimport ContactList from \"../ContactList/ContactListContainer\";\nimport Filter from \"../Filter/FilterContainer\";\nimport \"../../transitions/slide-appear.css\";\nimport slideTransition from \"../../transitions/slide.module.css\";\nimport * as selectors from \"../../redux/selectors\";\n\nimport styles from \"./PhoneBook.module.css\";\n\nconst PhoneBook = ({ contacts }) => (\n  <div className={styles.container}>\n    <CSSTransition in timeout={500} classNames=\"slide\" appear>\n      <h1 className={styles.logo}>Phonebook</h1>\n    </CSSTransition>\n\n    <ContactForm />\n\n    <TransitionGroup>\n      {contacts.length > 1 && (\n        <CSSTransition timeout={250} classNames={slideTransition}>\n          <Filter />\n        </CSSTransition>\n      )}\n    </TransitionGroup>\n\n    <ContactList />\n  </div>\n);\n\nconst mapStateToProps = (store) => ({\n  contacts: selectors.getContacts(store),\n  notifyText: selectors.getNotifyMessage(store),\n});\n\nexport default connect(mapStateToProps)(PhoneBook);\n","import React from \"react\";\r\nimport PhoneBook from \"./PhoneBook/PhoneBook\";\r\n\r\nconst App = () => <PhoneBook />;\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport App from \"./components/App\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__DJIw-\",\"label\":\"ContactForm_label__CQBLL\",\"input\":\"ContactForm_input__3r6HL\",\"submitBtn\":\"ContactForm_submitBtn__1HFjs\"};"],"sourceRoot":""}